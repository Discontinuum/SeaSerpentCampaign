 
#########################
# CHECK MAP & TRANSPORT FOR UNIT
#########################
#define IF_ON_MAP_OR_IN_TRANSPORT UNIT_ID
    # this macro is meant to simplify executing WML for units that may be on the map, or that may be in a transport
    # if you override both {CONDITION_MAP} and {CONDITION_TRANSPORT}, {UNIT_ID} becomes pointless and can be set to an empty string

#arg CONDITION_MAP
id={UNIT_ID}#endarg
#arg CONDITION_TRANSPORT
{VARIABLE_CONDITIONAL passenger.id equals {UNIT_ID}}#endarg

#arg WML_ALWAYS
#endarg
#arg WML_IF_MAP
#endarg
#arg WML_IF_TRANSPORT
#endarg

    # use this macro instead of [if][have_unit][then], to check both the map and cargo for a unit
    [if]
        #########################
        # FIRST, SEARCH THE MAP
        #########################
        [have_unit]
            {CONDITION_MAP}
        [/have_unit]
        [then]
            {WML_ALWAYS}
            {WML_IF_MAP}
        [/then]
        #########################
        # ELSE, SEARCH TRANSPORTS
        #########################
        [else]
            # for each transport...
            [store_unit]
                [filter]
                    ability=transport
                [/filter]
                variable=transportHaveUnit__transports
            [/store_unit]
            [foreach]
                array=transportHaveUnit__transports
                variable=transport # using short variables to make things more campaign-creator-friendly
                [do]
                    # for each passenger...
                    [foreach]
                        array="passengers_$(  replace_all(replace_all('$transport.id',' ',''),'-','')  )"
                        variable=passenger # using short variables to make things more campaign-creator-friendly
                        [do]
                            # is this the right passenger?
                            [if] {CONDITION_TRANSPORT}
                                [then]
                                    {WML_ALWAYS}
                                    {WML_IF_TRANSPORT}
                                    {VARIABLE transportHaveUnit__break yes}
                                    [break]
                                    [/break]
                                [/then]
                            [/if]
                        [/do]
                    [/foreach]
                    
                    # break the outer loop too
                    [if]{VARIABLE_CONDITIONAL transportHaveUnit__break equals yes}
                        [then]
                            [break]
                            [/break]
                        [/then]
                    [/if]
                [/do]
            [/foreach]
            {CLEAR_VARIABLE transportHaveUnit__transports,transportHaveUnit__break}
        [/else]
    [/if]
#enddef

#########################
# SAY MESSAGE FROM TRANSPORT
#########################
#define MESSAGE_TRANSPORT SPEAKER_ID MESSAGE MESSAGE_WML
    # use this macro instead of [message] to ensure that units can still speak even if they're being carried in a transport
    {IF_ON_MAP_OR_IN_TRANSPORT {SPEAKER_ID}
        (WML_IF_MAP=
            [message]
                speaker={SPEAKER_ID}
                message={MESSAGE}
                {MESSAGE_WML}
            [/message]
        )
        (WML_IF_TRANSPORT=
            [message]
                speaker=$transport.id
                image=$passenger.profile
                caption=$passenger.name
                message={MESSAGE}
                {MESSAGE_WML}
            [/message]
        )
    }
#enddef
#define TRANSPORT_EVENTS 
       #########################
        # ASSIGN HOTKEYS
        #########################
        # Wesnoth doesn't allow multiple menu_items with the same hotkey.
        # Create a single invisible menu_item here, so we can use "t" for loading/unloading any ship
        [event]
            name=unit placed
            id=transport__assign_hotkeys # we already have a transport__unit_placed
            [filter]
                ability=transport
            [/filter]
            [filter_condition]
                {VARIABLE_CONDITIONAL transport__hotkey_menu_item_set not_equals yes}
            [/filter_condition]
            {VARIABLE transport__hotkey_menu_item_set yes}
            [set_menu_item]
                id=transport_hotkey_menu_item
                use_hotkey=only
                [default_hotkey]
                    key=t
                [/default_hotkey]
                [filter_location]
                    [filter_adjacent_location]
                        [filter]
                            ability=transport
                        [/filter]
                    [/filter_adjacent_location]
                [/filter_location]
                
                [command]
                    #--------------------
                    # GET ALL CANDIDATE TRANSPORTS
                    #--------------------
                    [store_unit]
                        [filter]
                            side=$side_number
                            ability=transport
                            [filter_location]
                                [filter_adjacent_location]
                                    x,y=$x1,$y1
                                [/filter_adjacent_location]
                            [/filter_location]
                        [/filter]
                        variable=transportHotkey_transports
                    [/store_unit]
                    [if]
                        [have_unit]
                            x,y=$x1,$y1
                        [/have_unit]
                        #--------------------
                        # BOARD UNIT
                        #--------------------
                        # if we don't successfully board the first transport (maybe it's full), try every other option
                        [then]
                            [foreach]
                                array=transportHotkey_transports
                                variable=transportHotkey_transport
                                [do]
                                    [fire_event]
                                        name=transport__board_unit
                                        [primary_unit]
                                            id=$transportHotkey_transport.id
                                        [/primary_unit]
                                        [secondary_unit]
                                            x,y=$x1,$y1
                                        [/secondary_unit]
                                    [/fire_event]
                                    [if]
                                        [have_unit]
                                            x,y=$x1,$y1
                                        [/have_unit]
                                        [then]
                                        [/then]
                                        [else]
                                            [break]
                                            [/break]
                                        [/else]
                                    [/if]
                                [/do]
                            [/foreach]
                        [/then]
                        #--------------------
                        # DEBARK UNIT
                        #--------------------
                        # if we don't successfully debark the transport (maybe it's empty), try every other option
                        [else]
                            [foreach]
                                array=transportHotkey_transports
                                variable=transportHotkey_transport
                                [do]
                                    {VARIABLE transport__debark_hexes[0].x $x1}
                                    {VARIABLE transport__debark_hexes[0].y $y1}
                                    [fire_event]
                                        name=transport__debark_unit
                                        [primary_unit]
                                            id=$transportHotkey_transport.id
                                        [/primary_unit]
                                    [/fire_event]
                                    [if]
                                        [have_unit]
                                            x,y=$x1,$y1
                                        [/have_unit]
                                        [then]
                                            [break]
                                            [/break]
                                        [/then]
                                    [/if]
                                [/do]
                            [/foreach]
                        [/else]
                    [/if]
                    [allow_undo]
                    [/allow_undo]
                    {CLEAR_VARIABLE transportHotkey_transports,transportHotkey_transport,transportHotkey_passenger}
                [/command]
            [/set_menu_item]
        [/event]

        #########################
        # CREATE BOARDING MENU ITEM
        #########################
        [event]
            name=unit placed
            id=transport__unit_placed
            first_time_only=no
            [filter]
                ability=transport
            [/filter]
            
            # use $unit.image_icon if available, otherwise use $unit.image
            [if] {VARIABLE_CONDITIONAL transport.image_icon.length greater_than 0}
                [then]
                    {VARIABLE thumbnail $unit.image_icon}
                [/then]
                [else]
                    {VARIABLE thumbnail $unit.image}
                [/else]
            [/if]
            
            #--------------------
            # CREATE BOARD MENU ITEM
            #--------------------
            # need to wrap this in another [event], or else there's no way to set delayed_variable_substitution=no for the menu's [filter]
            [event]
                name=set_board_menu_item
                id=transport__set_board_menu_item
                delayed_variable_substitution=no
                [set_menu_item]
                    id=board_$unit.id
                    description=_"Board $unit.type “$unit.name”"
                    image=$thumbnail|~SCALE(24,24)
                    [filter_location]
                        [filter]
                            side=$unit.side
                            [and]
                                side=$side_number
                            [/and]
                            [filter_adjacent]
                                id=$unit.id
                            [/filter_adjacent]
                            [not]
                                race=ship
                            [/not]
                            [not]
                                ability=transport
                            [/not]
                        [/filter]
                    [/filter_location]
                    [command]
                        [fire_event]
                            name=transport__board_unit
                            [primary_unit]
                                id=$unit.id
                            [/primary_unit]
                            [secondary_unit]
                                x,y=$|x1,$|y1
                            [/secondary_unit]
                        [/fire_event]
                        [allow_undo]
                        [/allow_undo]
                    [/command]
                [/set_menu_item]
            [/event]
            [fire_event]
                name=set_board_menu_item
            [/fire_event]
            
            {CLEAR_VARIABLE transport,thumbnail}
        [/event]
        
        #########################
        # BOARD UNIT ONTO TRANSPORT
        #########################
        # this event will work fine when fired manually in a scenario
        # [primary_unit] is the transport
        # [secondary_unit] is the passenger
        # (optional) manually set transport__no_animation=yes to skip the [fake_unit_move] animation
        # (optional) manually set transport__silent_fail=yes to skip the [floating_text] from failed boarding
        # (optional) manually set transport__skip_checks=yes to skip checks when boarding (useful for cutscenes or undo)
        [event]
            name=transport__board_unit
            id=transport__board_unit
            first_time_only=no
            [filter]
                side=$side_number
            [/filter]
            [filter_second]
                side=$side_number
                [not]
                    race=ship
                [/not]
                [not]
                    ability=transport
                [/not]
            [/filter_second]
            
            #--------------------
            # CHECK MOVES
            #--------------------
            [if]{VARIABLE_CONDITIONAL second_unit.moves less_than 1}
                {VARIABLE_CONDITIONAL transport__skip_checks not_equals yes}
                [then]
                    [if] {VARIABLE_CONDITIONAL transport__silent_fail not_equals yes}
                        [then]
                            [floating_text]
                                x,y=$second_unit.x,$second_unit.y
                                text="<span color='#ff0000' size='small'>" + _"No Moves" + "</span>"
                            [/floating_text]
                        [/then]
                    [/if]
                [/then]
                #--------------------
                # CHECK CAPACITY
                #--------------------
                [elseif]
                    {VARIABLE_CONDITIONAL "passengers_$(  replace_all(replace_all('$unit.id',' ',''),'-','')  ).length" greater_than_equal_to $unit.level}
                    {VARIABLE_CONDITIONAL transport__skip_checks not_equals yes}
                    [then]
                        [if] {VARIABLE_CONDITIONAL transport__silent_fail not_equals yes}
                            [then]
                                # warn the player
                                [floating_text]
                                    x,y=$unit.x,$unit.y
                                    text="<span color='#ff0000' size='small'>" + _"Transport is Full" + "</span>"
                                [/floating_text]
                            [/then]
                        [/if]
                    [/then]
                [/elseif]
                [else]
                    #--------------------
                    # BOARD THE UNIT
                    #--------------------
                    [lua]
                        code= << wesnoth.game_events.fire('exit hex', wml.variables['second_unit'].x, wml.variables['second_unit'].y, wml.variables['unit'].x, wml.variables['unit'].y) >>
                    [/lua]
                    # can't fire 'enter hex' or 'moveto', because the transport occupies that hex and will become that event's $unit
                    [store_unit]
                        [filter]
                            id=$second_unit.id
                        [/filter]
                        variable="passengers_$(  replace_all(replace_all('$unit.id',' ',''),'-','')  )" # e.g. passengers_TransportGalleon4
                        mode=append
                        kill=yes
                    [/store_unit]
                    [if] {VARIABLE_CONDITIONAL transport__no_animation not_equals yes}
                        [then]
                            [move_unit_fake]
                                x=$second_unit.x,$unit.x
                                y=$second_unit.y,$unit.y
                                type=$second_unit.type
                                side=$second_unit.side
                            [/move_unit_fake]
                        [/then]
                    [/if]
                    [fire_event]
                        name=transport__refresh
                        [primary_unit]
                            id=$unit.id
                        [/primary_unit]
                    [/fire_event]
                    
                    #--------------------
                    # CREATE DEBARK MENU ITEM
                    #--------------------
                    # use $second_unit.image_icon if available, otherwise use $second_unit.image
                    [if] {VARIABLE_CONDITIONAL passenger.image_icon.length greater_than 0}
                        [then]
                            {VARIABLE thumbnail $second_unit.image_icon}
                        [/then]
                        [else]
                            {VARIABLE thumbnail $second_unit.image}
                        [/else]
                    [/if]
                    # need to wrap this in another [event], or else there's no way to set delayed_variable_substitution=no for the menu's [filter]
                    [event]
                        name=set_debark_menu_item
                        delayed_variable_substitution=no
                        id=transport__set_debark_menu_item
                        [set_menu_item]
                            id="debark_$(  replace_all(replace_all('$second_unit.id',' ',''),'-','')  )"
                            description=_"Debark $second_unit.type “$second_unit.name”"
                            image=$thumbnail~SCALE(24,24)
                            [filter_location]
                                [not]
                                    [filter]
                                    [/filter]
                                [/not]
                                [filter_adjacent_location]
                                    [filter]
                                        side=$side_number
                                        id=$unit.id
                                    [/filter]
                                [/filter_adjacent_location]
                            [/filter_location]
                            [command]
                                {VARIABLE transport__debark_hexes[0].x $|x1}
                                {VARIABLE transport__debark_hexes[0].y $|y1}
                                {VARIABLE transport__passenger_id $second_unit.id}
                                [fire_event]
                                    name=transport__debark_unit
                                    [primary_unit]
                                        id=$unit.id
                                    [/primary_unit]
                                [/fire_event]
                                [allow_undo]
                                [/allow_undo]
                            [/command]
                        [/set_menu_item]
                    [/event]
                    [fire_event]
                        name=set_debark_menu_item
                    [/fire_event]
                    
                    #--------------------
                    # UNDO BOARDING
                    #--------------------
                    # remember, delayed_variable_substitution=no inside the [on_undo],
                    # but delayed_variable_substitution=yes inside the [event]name=transport__debark_unit
                    [on_undo]
                        {VARIABLE transport__debark_hexes[0].x $second_unit.x}
                        {VARIABLE transport__debark_hexes[0].y $second_unit.y}
                        {VARIABLE transport__passenger_id $second_unit.id}
                        {VARIABLE transport__skip_checks yes}
                        [fire_event]
                            name=transport__debark_unit
                            [primary_unit]
                                id=$unit.id
                            [/primary_unit]
                        [/fire_event]
                        [modify_unit]
                            [filter]
                                id=$second_unit.id
                            [/filter]
                            moves=       $second_unit.moves
                            attacks_left=$second_unit.attacks_left
                            resting=     $second_unit.resting
                        [/modify_unit]
                    [/on_undo]
                [/else]
            [/if]
            {CLEAR_VARIABLE transport,passenger,thumbnail}
            {CLEAR_VARIABLE transport__no_animation,transport__silent_fail,transport__skip_checks}
        [/event]
        
        #########################
        # DEBARK ONE UNIT FROM TRANSPORT
        #########################
        # this event will work fine when fired manually in a scenario
        # [primary_unit] is the transport
        # manually set transport__passenger_id
        #       either [primary_unit] or transport__passenger_id can optionally be omitted, but not both
        # (optional) manually set transport__debark_hexes - expects at least 1 x,y pair
        # (optional) manually set transport__no_animation=yes to skip the [fake_unit_move] animation
        # (optional) manually set transport__silent_fail=yes to skip the [floating_text] from failed boarding
        # (optional) manually set transport__skip_checks=yes to skip the terrain defense check (useful for undo or cutscenes)
        [event]
            name=transport__debark_unit
            id=transport__debark_unit
            first_time_only=no
            # don't filter by $side_number, or else this fails when a transport dies on someone else's turn
            
            #--------------------
            # CHOOSE TRANSPORT
            #--------------------
            # if the user provides a passenger but not a transport, we need to iterate through every transport until we find the right one
            [if] {VARIABLE_CONDITIONAL unit.length greater_than 0}
                [then]
                    [set_variables]
                        name=transportDebark__transports
                        to_variable=unit
                    [/set_variables]
                [/then]
                [else]
                    [store_unit]
                        [filter]
                            ability=transport
                        [/filter]
                        variable=transportDebark__transports
                    [/store_unit]
                [/else]
            [/if]
            [foreach]
                array=transportDebark__transports
                variable=transportDebark__transport
                [do]
                    #--------------------
                    # DEBARK FROM TRANSPORT
                    #--------------------
                    [set_variables]
                        name=transportDebark__passengers # copy into $passengers so that we can more easily modify the main array during this loop
                        to_variable="passengers_$(  replace_all(replace_all('$transportDebark__transport.id',' ',''),'-','')  )"
                    [/set_variables]
                    [foreach]
                        array=transportDebark__passengers
                        variable=transportDebark__passenger
                        [do]
                            #--------------------
                            # CHOOSE PASSENGER
                            #--------------------
                            # iterate through each passenger until we find the one (if any) that we're looking for
                            [if]{VARIABLE_CONDITIONAL transport__passenger_id not_equals $null}
                                {VARIABLE_CONDITIONAL transport__passenger_id not_equals $transportDebark__passenger.id}
                                [then]
                                    [continue]
                                    [/continue]
                                [/then]
                            [/if]
                            
                            #--------------------
                            # STORE LOCATIONS
                            #--------------------
                            [if]{VARIABLE_CONDITIONAL transport__debark_hexes.length greater_than 0}
                                [then]
                                    # if we were given an x and y coordinate, store all data about the location (needed for uncapturing the village on undo)
                                    [store_locations]
                                        x,y=$transport__debark_hexes[0].x,$transport__debark_hexes[0].y
                                        variable=transport__debark_hexes
                                    [/store_locations]
                                [/then]
                                [else]
                                    # if transport__debark_hexes hasn't been provided, default to all adjacent hexes
                                    [store_locations]
                                        [filter_adjacent_location]
                                            x,y=$transportDebark__transport.x,$transportDebark__transport.y
                                        [/filter_adjacent_location]
                                        include_borders=no
                                        variable=transport__debark_hexes
                                    [/store_locations]
                                [/else]
                            [/if]
                            [foreach]
                                array=transport__debark_hexes
                                variable=transportDebark__hex
                                index_var=j
                                [do]
                                    #--------------------
                                    # CHECK PASSABILITY
                                    #--------------------
                                    [if]
                                        [have_unit]
                                            x,y=$transportDebark__hex.x,$transportDebark__hex.y
                                        [/have_unit]
                                        # always check passability, even if transport__skip_checks=yes
                                        [then]
                                            [continue]
                                            [/continue]
                                        [/then]
                                    [/if]
                                    
                                    #--------------------
                                    # DEBARK PASSENGER
                                    #--------------------
                                    [unstore_unit]
                                        variable=transportDebark__passenger
                                        x,y=$transportDebark__hex.x,$transportDebark__hex.y
                                    [/unstore_unit]
                                    [hide_unit]
                                        x,y=$transportDebark__hex.x,$transportDebark__hex.y
                                    [/hide_unit]
                                    [store_relative_direction]
                                        [source]
                                            x,y=$transportDebark__transport.x,$transportDebark__transport.y
                                        [/source]
                                        [destination]
                                            x,y=$transportDebark__hex.x,$transportDebark__hex.y
                                        [/destination]
                                        variable=transportDebark__facing
                                    [/store_relative_direction]
                                    {MODIFY_UNIT id=$transportDebark__passenger.id facing $transportDebark__facing}
                                    
                                    #--------------------
                                    # DEBUFF PASSENGER
                                    #--------------------
                                    # if you change any of these debark debuffs, make sure to change boarding [on_undo] as well
                                    {MODIFY_UNIT id=$transportDebark__passenger.id moves 0}
                                    {MODIFY_UNIT id=$transportDebark__passenger.id resting no}
                                    [if]
                                        [have_unit]
                                            id=$transportDebark__transport.id
                                            ability=beachhead
                                        [/have_unit]
                                        [then]
                                            # 'beachhead' allows passengers to retain attacks on disembark 
                                        [/then]
                                        [else]
                                            {MODIFY_UNIT id=$transportDebark__passenger.id attacks_left 0}
                                        [/else]
                                    [/if]
                                    
                                    #--------------------
                                    # CHECK TERRAIN
                                    #--------------------
                                    [if]
                                        [have_unit]
                                            id=$transportDebark__passenger.id
                                            defense=100
                                        [/have_unit]
                                        {VARIABLE_CONDITIONAL transport__skip_checks not_equals yes}
                                        [then]
                                            [kill]
                                                id=$transportDebark__passenger.id
                                            [/kill]
                                            [if] {VARIABLE_CONDITIONAL transport__silent_fail not_equals yes}
                                                [then]
                                                    [floating_text]
                                                        x,y=$transportDebark__hex.x,$transportDebark__hex.y
                                                        text="<span color='#ff0000' size='small'>" + _"Impassable Terrain" + "</span>"
                                                    [/floating_text]
                                                [/then]
                                            [/if]
                                            [continue]
                                            [/continue]
                                        [/then]
                                    [/if]
                                    
                                    #--------------------
                                    # UPDATE UI
                                    #--------------------
                                    [clear_menu_item]
                                        id="debark_$(  replace_all(replace_all('$transportDebark__passenger.id',' ',''),'-','')  )"
                                    [/clear_menu_item]
                                    {CLEAR_VARIABLE "passengers_$(  replace_all(replace_all('$transportDebark__transport.id',' ',''),'-','')  )[$i]"}
                                    [fire_event]
                                        name=transport__refresh
                                        [primary_unit]
                                            id=$transportDebark__transport.id
                                        [/primary_unit]
                                    [/fire_event]
                                    
                                    #--------------------
                                    # ANIMATE DEBARKING
                                    #--------------------
                                    [if] {VARIABLE_CONDITIONAL transport__no_animation not_equals yes}
                                        [then]
                                            [move_unit_fake]
                                                x=$transportDebark__transport.x,$transportDebark__hex.x
                                                y=$transportDebark__transport.y,$transportDebark__hex.y
                                                type=$transportDebark__passenger.type
                                                side=$transportDebark__passenger.side
                                            [/move_unit_fake]
                                        [/then]
                                    [/if]
                                    [unhide_unit]
                                        x,y=$transportDebark__hex.x,$transportDebark__hex.y
                                    [/unhide_unit]
                                    
                                    #--------------------
                                    # FIRE EVENTS
                                    #--------------------
                                    # can't fire 'exit hex', because the transport occupies that hex and will become that event's $unit
                                    [lua]
                                        code = <<
                                            wesnoth.game_events.fire('enter hex',
                                            wml.variables['transportDebark__hex'].x, wml.variables['transportDebark__hex'].y,
                                            wml.variables['transportDebark__transport'].x, wml.variables['transportDebark__transport'].y)
                                        >>
                                    [/lua]
                                    [lua]
                                        code = <<
                                            wesnoth.game_events.fire('moveto',    
                                            wml.variables['transportDebark__hex'].x, wml.variables['transportDebark__hex'].y,
                                            wml.variables['transportDebark__transport'].x, wml.variables['transportDebark__transport'].y)
                                        >>
                                    [/lua]
                                    [capture_village]
                                        x,y=$transportDebark__hex.x,$transportDebark__hex.y
                                        side=$transportDebark__passenger.side
                                        fire_event=yes
                                    [/capture_village]
                                    
                                    #--------------------
                                    # UNDO DEBARKING
                                    #--------------------
                                    [on_undo]
                                        {VARIABLE transport__skip_checks yes}
                                        [fire_event]
                                            name=transport__board_unit
                                            [primary_unit]
                                                id=$transportDebark__transport.id
                                            [/primary_unit]
                                            [secondary_unit]
                                                id=$transportDebark__passenger.id
                                            [/secondary_unit]
                                        [/fire_event]
                                        [capture_village]
                                            x,y=$transportDebark__hex.x,$transportDebark__hex.y
                                            [filter_side] # use [filter_side] here so that side=0 doesn't throw an error
                                                side=$transportDebark__hex.owner_side
                                            [/filter_side]
                                            fire_event=yes
                                        [/capture_village]
                                    [/on_undo]
                                    
                                    {VARIABLE transportDebark__break yes}
                                    [break]
                                    [/break]
                                [/do]
                            [/foreach]
                            
                            # break the outer loop too
                            [if]{VARIABLE_CONDITIONAL transportDebark__break equals yes}
                                [then]
                                    [break]
                                    [/break]
                                [/then]
                            [/if]
                        [/do]
                    [/foreach]
                    
                    # break the outer loop too
                    [if]{VARIABLE_CONDITIONAL transportDebark__break equals yes}
                        [then]
                            [break]
                            [/break]
                        [/then]
                    [/if]
                [/do]
            [/foreach]
            {CLEAR_VARIABLE transportDebark__transports,transportDebark__passengers,transportDebark__facing,transportDebark__break}
            {CLEAR_VARIABLE transport__debark_hexes,transport__passenger_id}
            {CLEAR_VARIABLE transport__no_animation,transport__silent_fail,transport__skip_checks}
        [/event]
        
        #########################
        # REFRESH UPKEEP AND OVERLAY
        #########################
        # this event will work fine when fired manually in a scenario (but I don't think there's ever any reason to?)
        # [primary_unit] is the transport
        [event]
            name=transport__refresh
            id=transport__refresh
            first_time_only=no
            
            #--------------------
            # RESET TRANSPORT
            #--------------------
            [remove_object]
                id=$unit.id
                object_id=passengers_overlay
            [/remove_object]
#             {MODIFY_UNIT id=$unit.id canrecruit no} # DISABLED (reasoning below)
            [if]
                [have_unit]
                    id=$unit.id
                    trait=loyal
                [/have_unit]
                [then]
                    {VARIABLE transportRefresh__upkeep 0}
                [/then]
                [else]
                    {VARIABLE transportRefresh__upkeep $unit.level}
                [/else]
            [/if]

            #--------------------
            # CHECK EACH PASSENGER
            #--------------------
            [foreach]
                array="passengers_$(  replace_all(replace_all('$unit.id',' ',''),'-','')  )"
                variable=transportRefresh__passenger
                [do]
                    # passsenger overlays
                    [store_side]
                        side=$transportRefresh__passenger.side
                        variable=transportRefresh__passengerSide
                    [/store_side]
                    [if] {VARIABLE_CONDITIONAL transportRefresh__passenger.status.poisoned equals yes}
                        [then]
                            {VARIABLE transportRefresh__poisonIPF "~G(70)"}
                        [/then]
                    [/if]
                    [object]
                        id=passengers_overlay
                        take_only_once=no
                        [filter]
                            id=$unit.id
                        [/filter]
                        [effect]
                            apply_to=overlay
                            add=misc/blank-hex.png~SCALE(144,144)~BLIT( $transportRefresh__passenger.image|~FL()~SCALE(42,42)~RC(magenta>$transportRefresh__passengerSide.color)$transportRefresh__poisonIPF, 36,"$($i*18-8)" )
                        [/effect]
                    [/object]
                    {CLEAR_VARIABLE transportRefresh__poisonIPF,transportRefresh__passengerSide}
                    
                    # many scenarios end in defeat if the player has no leader
                    # so, if we load a leader, make the ship a leader
                    # DISABLED. 1) canrecruit=yes messes with passenger upkeep, and 2) modders can just use defeat_condition=never
#                     [if] {VARIABLE_CONDITIONAL transportRefresh__passenger.canrecruit equals yes}
#                         [then]
#                             {MODIFY_UNIT id=$unit.id canrecruit yes}
#                         [/then]
#                     [/if]
                    
                    # upkeep
                    # NOTE - if the transport has canrecruit=yes, the engine ignores its upkeep
                    # to avoid passengers getting free upkeep, I recommend against making transports leaders
                    [if] {VARIABLE_CONDITIONAL transportRefresh__passenger.upkeep equals "full"}
                        [then]
                            {VARIABLE_OP transportRefresh__upkeep add $transportRefresh__passenger.level}
                        [/then]
                    [/if]
                [/do]
            [/foreach]
            {MODIFY_UNIT id=$unit.id upkeep $transportRefresh__upkeep}
            {CLEAR_VARIABLE transportRefresh__upkeep}
            [allow_undo]
            [/allow_undo]
        [/event]
        
        #########################
        # TICK ALL TRANSPORTS
        #########################
        [event]
            name=side turn  # apparently no such thing as "side turn refresh"
            id=transport__tick
            first_time_only=no
            [store_unit]
                [filter]
                    side=$side_number
                    ability=transport
                [/filter]
                variable=transportTick__transports
            [/store_unit]
            [foreach]
                array=transportTick__transports
                variable=transportTick__transport
                [do]
                    [foreach]
                        array="passengers_$(  replace_all(replace_all('$transportTick__transport.id',' ',''),'-','')  )"
                        variable=transportTick__passenger
                        [do]
                            #--------------------
                            # MOVES AND ATTACKS
                            #--------------------
                            # attacks_left is only relevant for beachhead. Moves isn't relevant at all, but track it just in case
                            {VARIABLE transportTick__passenger.moves        $transportTick__passenger.movement}
                            {VARIABLE transportTick__passenger.attacks_left $transportTick__passenger.attacks }
                            
                            #--------------------
                            # HEALING, POISON, AND SLOW
                            #--------------------
                            [lua]
                                code = <<
                                -- if the transport can heal or cure, record that
                                local transport_cures = false
                                local transport_slows = false
                                local transport_healing = 0
                                for ability in wml.child_range(wml.get_child(wml.variables['transportTick__transport'], 'abilities'), 'heals') do
                                    if ability.poison=='cured'  then transport_cures=true end
                                    if ability.poison=='slowed' then transport_slows=true end
                                    transport_healing = math.max( transport_healing, ability.value )
                                end
                                
                                -- if the passenger can self-cure, record that
                                local passenger_cures = false
                                local passenger_slows = false
                                for ability in wml.child_range(wml.get_child(wml.variables['transportTick__passenger'], 'abilities'), 'regenerate') do
                                    if ability.poison=='cured'  then passenger_cures=true end
                                    if ability.poison=='slowed' then passenger_slows=true end
                                end
                                
                                -- implement curing and healing
                                -- remember that units in transports can't rest, regenerate, or heal others
                                if wml.get_child(wml.variables['transportTick__passenger'],'status').poisoned then
                                    if     transport_cures or passenger_cures then
                                        wml.variables['transportTick__unpoison'] = false
                                    elseif transport_slows or passenger_slows then
                                        -- do nothing
                                    else
                                        wml.variables['transportTick__new_hitpoints'] = math.max(
                                            1,
                                            wml.variables['transportTick__passenger'].hitpoints-8
                                        )
                                    end
                                else
                                    wml.variables['transportTick__new_hitpoints'] = math.min(
                                        wml.variables['transportTick__passenger'].hitpoints+transport_healing,
                                        wml.variables['transportTick__passenger'].max_hitpoints
                                    )
                                end
                                >>
                            [/lua]
                            
                            # modifying these via lua doesn't seem to work; handle via WML instead
                            [if] {VARIABLE_CONDITIONAL transportTick__new_hitpoints not_equals $null}
                                [then]
                                    {VARIABLE transportTick__passenger.hitpoints $transportTick__new_hitpoints}
                                [/then]
                            [/if]
                            [if] {VARIABLE_CONDITIONAL transportTick__unpoison not_equals $null}
                                [then]
                                    {VARIABLE transportTick__passenger.status.poisoned no}
                                [/then]
                            [/if]
                            {VARIABLE transportTick__passenger.status.slowed no}
                            {CLEAR_VARIABLE transportTick__new_hitpoints,transportTick__unpoison}
                        [/do]
                    [/foreach]
                    
                    #--------------------
                    # REFERSH TRANSPORT
                    #--------------------
                    [fire_event]
                        name=transport__refresh
                        [primary_unit]
                            id=$transportTick__transport.id
                        [/primary_unit]
                    [/fire_event]
                [/do]
            [/foreach]
            {CLEAR_VARIABLE transportTick__transports}
        [/event]
        
        #########################
        # TRANSPORT DIES
        #########################
        # when a transport dies, attempt to debark all passengers
        # any passengers who aren't able to debark die
        [event]
            name=last breath
            id=transport__last_breath
            first_time_only=no
            [filter]
                ability=transport
            [/filter]
            
            #--------------------
            # ATTEMPT TO DEBARK PASSENGERS
            #--------------------
            [set_variables]
                name=transportDie__passengers
                to_variable="passengers_$(  replace_all(replace_all('$unit.id',' ',''),'-','')  )"
            [/set_variables]
            [foreach]
                array=transportDie__passengers
                variable=transportDie__passenger
                [do]
                    # attempt to debark this passenger
                    {VARIABLE transport__passenger_id $transportDie__passenger.id}
                    {VARIABLE transport__silent_fail yes}
                    [fire_event]
                        name=transport__debark_unit
                        [primary_unit]
                            id=$unit.id
                        [/primary_unit]
                    [/fire_event]
                    
                    # if the passenger debarked, damage them for half of their current hp
                    {STORE_UNIT_VAR id=$transportDie__passenger.id hitpoints transportDie__damage}
                    {VARIABLE_OP transportDie__damage divide 2}
                    [harm_unit]
                        [filter]
                            id=$transportDie__passenger.id
                        [/filter]
                        amount=$transportDie__damage
                        kill=no
                        animate=yes
                        delay=0
                    [/harm_unit]
                    {CLEAR_VARIABLE transportDie__damage}
                [/do]
            [/foreach]
            {CLEAR_VARIABLE transportDie__passengers}
            
            #--------------------
            # KILL ANY REMAINING PASSENGERS
            #--------------------
            # let the ship properly die, so that we award XP to whoever killed it and fire any death events
            [event]
                name=die
                id=transport__die
                [filter]    
                    id=$unit.id
                [/filter]
                [kill]
                    id=$unit.id # remove the dead ship from the map, so we can kill remaining passengers in its hex
                [/kill]
                
                [set_variables]
                    name=transportDie__passengers
                    to_variable="passengers_$(  replace_all(replace_all('$unit.id',' ',''),'-','')  )"
                [/set_variables]
                [foreach]
                    array=transportDie__passengers
                    variable=transportDie__passenger
                    [do]
                        [unstore_unit]
                            variable=transportDie__passenger
                            x,y=$unit.x,$unit.y
                        [/unstore_unit]
                        [kill]
                            id=$transportDie__passenger.id
                            animate=yes
                            fire_event=yes
                        [/kill]
                        {CLEAR_VARIABLE "passengers_$(  replace_all(replace_all('$unit.id',' ',''),'-','')  )[$i]"}
                        [clear_menu_item]
                            id="debark_$(  replace_all(replace_all('$transportDie__passenger.id',' ',''),'-','')  )"
                        [/clear_menu_item]
                    [/do]
                [/foreach]
                {CLEAR_VARIABLE transportDie__passengers}
            [/event]
        [/event]
        
        #########################
        # DISEMBARK ON VICTORY
        #########################
        # this event will work fine when fired manually in a scenario
        # don't let units stay on transports after the scenario ends, or we'd get all kinds of weird problems
        # this event can also be fired manually anytime we want to disembark all embarked units (e.g. before a cutscene)
        [event]
            name=victory,transport__victory
            id=transport__victory
            first_time_only=no
            [store_unit]
                [filter]
                    ability=transport
                [/filter]
                variable=transportVictory__transports
            [/store_unit]
            [foreach]
                array=transportVictory__transports
                variable=transportVictory__transport
                [do]
                    #--------------------
                    # DEBARK PASSENGERS
                    #--------------------
                    [set_variables]
                        name=transportVictory__passengers
                        to_variable="passengers_$(  replace_all(replace_all('$transportVictory__transport.id',' ',''),'-','')  )"
                    [/set_variables]
                    [foreach]
                        array=transportVictory__passengers
                        variable=transportVictory__passenger
                        [do]
                            # attempt to debark the unit
                            {VARIABLE transport__passenger_id $transportVictory__passenger.id}
                            {VARIABLE transport__silent_fail yes}
                            {VARIABLE transport__no_animation yes}
                            [fire_event]
                                name=transport__debark_unit
                                [primary_unit]
                                    id=$transportVictory__transport.id
                                [/primary_unit]
                            [/fire_event]
                            
                            # it's possible there's no adjacent free hexes in which to debark
                            # in that case, pick any empty hex and debark there
                            # this will also fail if every single hex on the map is filled, but that's very unlikely
                            [if]
                                [not]
                                    [have_unit]
                                        id=$transportVictory__passenger.id
                                    [/have_unit]
                                [/not]
                                [then]
                                    [store_locations]
                                        [not]
                                            [filter]
                                            [/filter]
                                        [/not]
                                        include_borders=no
                                        variable=transport__debark_hexes
                                    [/store_locations]
                                    {VARIABLE transport__passenger_id $transportVictory__passenger.id}
                                    {VARIABLE transport__no_animation yes}
                                    {VARIABLE transport__silent_fail yes}
                                    {VARIABLE transport__skip_checks yes}
                                    [fire_event]
                                        name=transport__debark_unit
                                        [primary_unit]
                                            id=$transportVictory__transport.id
                                        [/primary_unit]
                                    [/fire_event]
                                [/then]
                            [/if]
                        [/do]
                    [/foreach]
                    
                    #--------------------
                    # REFERSH TRANSPORT
                    #--------------------
                    [fire_event]
                        name=transport__refresh
                        [primary_unit]
                            id=transportVictory__transports
                        [/primary_unit]
                    [/fire_event]
                [/do]
            [/foreach]
            {CLEAR_VARIABLE transportVictory__transports,transportVictory__passengers}
        [/event]
        #enddef
